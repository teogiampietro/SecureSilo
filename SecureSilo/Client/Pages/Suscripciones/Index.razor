@page "/suscripciones"
@inject HttpClient http
@inject IJSRuntime JS

<div class="container">
    <br />
    <h2 class="text-center"> Suscripciones</h2>
    <div class="d-flex justify-content-center">
        <label class="sr-only" for="nombre-filtro">Filtrar</label>
        <input type="text" class="form-control mb-2 mr-sm-2"
               @bind="usernName" placeholder="Filtrar por nombre de usuario" />
        <button type="button" class="btn btn-dark mr-sm-2 mb-2"
                @onclick="Filtrar">
            Filtrar
        </button>
        <button type="button" class="btn btn-danger  mb-2"
                @onclick="Limpiar">
            Limpiar
        </button>
    </div>

    @if (users == null)
    {
        <text> Cargando </text>
    }
    else if (users.Length == 0)
    {
        <text> No se encuentran resultados. </Text>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Nombre</th>
                    <th>Email</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in users)
                {
                    <tr>
                        <td> @user.UserId</td>
                        <td> @user.UserName</td>
                        <td> @user.UserMail </td>
                        <td> <a class="btn btn-success" href="suscripcion/@user.UserId/gestionar">Gestionar</a></td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>
@code {
    ResponseIndexSuscripcion[] users { get; set; }
    private string usernName = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await CargarUsuarios();
    }
    async Task CargarUsuarios()
    {
        users = await http.GetFromJsonAsync<ResponseIndexSuscripcion[]>("User/users");
    }
    private async Task Filtrar()
    {
        if (usernName == string.Empty)
        {
            await CargarUsuarios();
        }
        else
        {
            users = await http.GetFromJsonAsync<ResponseIndexSuscripcion[]>($"User/users-name/{usernName}");
        }
    }
    private async Task Limpiar()
    {
        usernName = string.Empty;
        await CargarUsuarios();
    }

}
