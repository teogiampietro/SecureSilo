@page "/historial-updates"
@inject HttpClient Http
@inject IJSRuntime JS

@attribute [Authorize]
<div class="container">
    <h2>Historial de actualizaciones por dispositivos</h2>
    <div class="d-flex justify-content-center">
        <label class="sr-only" for="nombre-filtro">Filtrar</label>
        <input type="text" class="form-control mb-2 mr-sm-2"
               @bind="nombreDispositivoFiltro" placeholder="Filtrar por Dispositivo" />
        <button type="button" class="btn btn-dark mr-sm-2 mb-2"
                @onclick="Filtrar">
            Filtrar
        </button>
        <button type="button" class="btn btn-danger  mb-2"
                @onclick="Limpiar">
            Limpiar
        </button>
    </div>
    @if (dispositivos == null)
    {
        <text> Cargando actualizaciones... </text>
    }
    else if (dispositivos.Length == 0)
    {
        <text> No se encontraron actualizaciones cargadas en la base de datos. </text>
    }
    else
    {
        @foreach (var dispositivo in dispositivos)

        {
            <h4 class="d-flex justify-content-center font-weight-bold">@(dispositivo.Descripcion )</h4>
            <table class="table table-sm">
                <thead>
                    <tr>
                        <th scope="col"></th>
                        <th scope="col">Fecha Hora</th>
                        <th scope="col">Temperatura</th>
                        <th scope="col">Humedad</th>
                        <th scope="col">Movimiento</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var update in dispositivo.Updates)
                    {
                        <tr>
                            <td scope="row">@update.Id</td>
                            <td scope="row">@update.F</td>
                            <td scope="row">@update.T</td>
                            <td scope="row">@update.H</td>
                            <td scope="row">@update.A</td>
                        </tr>
                    }
                </tbody>
            </table>

        }
    }
</div>

@code {
    Dispositivo[] dispositivos { get; set; }
    private string nombreDispositivoFiltro = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await CargarUpdates();
    }
    async Task CargarUpdates()
    {
        dispositivos = await Http.GetFromJsonAsync<Dispositivo[]>("Update");
    }
    private async Task Filtrar()
    {
        if (nombreDispositivoFiltro == string.Empty)
        {
            await CargarUpdates();
        }
        else
        {
            dispositivos = await Http.GetFromJsonAsync<Dispositivo[]>($"Update/getFiltered/{nombreDispositivoFiltro}");
        }

    }
    private async Task Limpiar()
    {
        nombreDispositivoFiltro = string.Empty;
        await CargarUpdates();

    }
}
