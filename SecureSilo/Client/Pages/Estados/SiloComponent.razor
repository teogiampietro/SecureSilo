@inject HttpClient Http
<h3>Silo</h3>
@if (silos == null)
{
    <text> Cargando silos... </text>
}
else if (silos.Length == 0)
{
    <text> No se encontraron silos en la base de datos. </text>
}
else
{
    <div class="btn-group btn-group-lg" role="group">

        @foreach (var _silo in silos)
            foreach (var _dsp in _silo.Dispositivos)
            {
                @switch (_dsp.Estado.Id)
                {
                    case 1:
                        <button type="button" class="pr-lg-4 pl-lg-4 btn btn-danger">@_dsp.Descripcion</button>
                        break;
                    case 2:
                        <button type="button" class="pr-lg-4 pl-lg-4 btn btn-secondary">@_dsp.Descripcion</button>
                        break;
                    case 3:
                        <button type="button" class="pr-lg-4 pl-lg-4 btn btn-success ">@_dsp.Descripcion</button>
                        break;
                    case 4:
                        <button type="button" class="pr-lg-4 pl-lg-4 btn btn-warning">@_dsp.Descripcion</button>
                        break;
                    default:
                        <button type="button" class="pr-lg-4 pl-lg-4 btn btn-secondary">@_dsp.Descripcion</button>
                        break;
                }

            }

    </div>
}

@code {

    // [Parameter] public Silo Silo { get; set; } = new Silo();
    // List<Silo> silos = new List<Silo>();
    Silo[] silos { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await CargarSilo();
    }
    async Task CargarSilo()
    {
        silos = await Http.GetFromJsonAsync<Silo[]>("Silos");
    }

}
